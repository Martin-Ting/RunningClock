
mting005_lab1_part5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000010a  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000008e3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000912  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000131  00000000  00000000  00000942  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000097  00000000  00000000  00000a73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000126  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00000c30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000101  00000000  00000000  00000c74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000fb  00000000  00000000  00000d75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	35 c0       	rjmp	.+106    	; 0x106 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
	return ( (x&(0x01 << k)) != 0 );
}

int main(void)
{
	DDRA = 0x00; PORTA=0xFF;
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0xFF;
  a4:	84 b9       	out	0x04, r24	; 4
  a6:	85 b9       	out	0x05, r24	; 5
	DDRC = 0xFF; PORTC = 0x00;
  a8:	87 b9       	out	0x07, r24	; 7
  aa:	18 b8       	out	0x08, r1	; 8
		}else if (fuelData >= 10 && fuelData <= 12){
			fuelLevel = 0x3E;
		}else if (fuelData >= 13 && fuelData <= 15){
			fuelLevel = 0x3F;
		} else {
			fuelLevel = 0x00;
  ac:	20 e0       	ldi	r18, 0x00	; 0
	DDRA = 0x00; PORTA=0xFF;
	DDRB = 0xFF; PORTB = 0xFF;
	DDRC = 0xFF; PORTC = 0x00;
	unsigned char fuelLevel = 0x00;
	while(1){
		unsigned char fuelData = ~PINA & 0x0F;
  ae:	80 b1       	in	r24, 0x00	; 0
  b0:	80 95       	com	r24
  b2:	8f 70       	andi	r24, 0x0F	; 15
		if(fuelData == 1 || fuelData == 2){
  b4:	98 2f       	mov	r25, r24
  b6:	91 50       	subi	r25, 0x01	; 1
  b8:	92 30       	cpi	r25, 0x02	; 2
  ba:	88 f0       	brcs	.+34     	; 0xde <main+0x40>
			fuelLevel = 0x20;
		}else if (fuelData == 3 || fuelData == 4){
  bc:	92 50       	subi	r25, 0x02	; 2
  be:	92 30       	cpi	r25, 0x02	; 2
  c0:	80 f0       	brcs	.+32     	; 0xe2 <main+0x44>
			fuelLevel = 0x30;
		}else if (fuelData == 5 || fuelData == 6){
  c2:	92 50       	subi	r25, 0x02	; 2
  c4:	92 30       	cpi	r25, 0x02	; 2
  c6:	78 f0       	brcs	.+30     	; 0xe6 <main+0x48>
			fuelLevel = 0x38;
		}else if (fuelData >= 7 && fuelData <= 9){
  c8:	92 50       	subi	r25, 0x02	; 2
  ca:	93 30       	cpi	r25, 0x03	; 3
  cc:	70 f0       	brcs	.+28     	; 0xea <main+0x4c>
			fuelLevel = 0x3C;
		}else if (fuelData >= 10 && fuelData <= 12){
  ce:	93 50       	subi	r25, 0x03	; 3
  d0:	93 30       	cpi	r25, 0x03	; 3
  d2:	68 f0       	brcs	.+26     	; 0xee <main+0x50>
			fuelLevel = 0x3E;
		}else if (fuelData >= 13 && fuelData <= 15){
  d4:	93 50       	subi	r25, 0x03	; 3
  d6:	93 30       	cpi	r25, 0x03	; 3
  d8:	60 f4       	brcc	.+24     	; 0xf2 <main+0x54>
			fuelLevel = 0x3F;
  da:	9f e3       	ldi	r25, 0x3F	; 63
  dc:	0b c0       	rjmp	.+22     	; 0xf4 <main+0x56>
	DDRC = 0xFF; PORTC = 0x00;
	unsigned char fuelLevel = 0x00;
	while(1){
		unsigned char fuelData = ~PINA & 0x0F;
		if(fuelData == 1 || fuelData == 2){
			fuelLevel = 0x20;
  de:	90 e2       	ldi	r25, 0x20	; 32
  e0:	09 c0       	rjmp	.+18     	; 0xf4 <main+0x56>
		}else if (fuelData == 3 || fuelData == 4){
			fuelLevel = 0x30;
  e2:	90 e3       	ldi	r25, 0x30	; 48
  e4:	07 c0       	rjmp	.+14     	; 0xf4 <main+0x56>
		}else if (fuelData == 5 || fuelData == 6){
			fuelLevel = 0x38;
  e6:	98 e3       	ldi	r25, 0x38	; 56
  e8:	05 c0       	rjmp	.+10     	; 0xf4 <main+0x56>
		}else if (fuelData >= 7 && fuelData <= 9){
			fuelLevel = 0x3C;
  ea:	9c e3       	ldi	r25, 0x3C	; 60
  ec:	03 c0       	rjmp	.+6      	; 0xf4 <main+0x56>
		}else if (fuelData >= 10 && fuelData <= 12){
			fuelLevel = 0x3E;
  ee:	9e e3       	ldi	r25, 0x3E	; 62
  f0:	01 c0       	rjmp	.+2      	; 0xf4 <main+0x56>
		}else if (fuelData >= 13 && fuelData <= 15){
			fuelLevel = 0x3F;
		} else {
			fuelLevel = 0x00;
  f2:	92 2f       	mov	r25, r18
		}
	
		if(fuelData <= 4){
  f4:	85 30       	cpi	r24, 0x05	; 5
  f6:	18 f4       	brcc	.+6      	; 0xfe <main+0x60>
			//light PC6
			fuelLevel = fuelLevel | 0x80;
  f8:	89 2f       	mov	r24, r25
  fa:	80 68       	ori	r24, 0x80	; 128
  fc:	02 c0       	rjmp	.+4      	; 0x102 <main+0x64>
		}
		else{
			fuelLevel = fuelLevel & (0xFF & ~0x80);
  fe:	89 2f       	mov	r24, r25
 100:	8f 77       	andi	r24, 0x7F	; 127
		}
		PORTB = fuelLevel;
 102:	85 b9       	out	0x05, r24	; 5
{
	DDRA = 0x00; PORTA=0xFF;
	DDRB = 0xFF; PORTB = 0xFF;
	DDRC = 0xFF; PORTC = 0x00;
	unsigned char fuelLevel = 0x00;
	while(1){
 104:	d4 cf       	rjmp	.-88     	; 0xae <main+0x10>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
