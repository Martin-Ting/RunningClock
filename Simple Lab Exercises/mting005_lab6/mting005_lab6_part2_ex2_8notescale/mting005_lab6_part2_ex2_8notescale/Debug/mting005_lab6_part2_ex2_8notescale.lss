
mting005_lab6_part2_ex2_8notescale.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000780  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000780  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800124  00800124  00000838  2**0
                  ALLOC
  3 .stab         00001bfc  00000000  00000000  00000838  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007d5  00000000  00000000  00002434  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00002c09  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000078  00000000  00000000  00002c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000003b8  00000000  00000000  00002cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000001c4  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000427  00000000  00000000  0000322c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000138  00000000  00000000  00003654  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002b7  00000000  00000000  0000378c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000001e3  00000000  00000000  00003a43  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00003c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	71 c0       	rjmp	.+226    	; 0x118 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e8       	ldi	r30, 0x80	; 128
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 32       	cpi	r26, 0x24	; 36
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e2       	ldi	r26, 0x24	; 36
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c2 d1       	rcall	.+900    	; 0x448 <main>
  c4:	5b c3       	rjmp	.+1718   	; 0x77c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
		TimerFlag = 0;	
    }
}

void ADC_init(){
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
  c8:	8b e0       	ldi	r24, 0x0B	; 11
  ca:	80 93 81 00 	sts	0x0081, r24
  ce:	8d e7       	ldi	r24, 0x7D	; 125
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 89 00 	sts	0x0089, r25
  d6:	80 93 88 00 	sts	0x0088, r24
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	80 93 6f 00 	sts	0x006F, r24
  e0:	10 92 85 00 	sts	0x0085, r1
  e4:	10 92 84 00 	sts	0x0084, r1
  e8:	80 91 20 01 	lds	r24, 0x0120
  ec:	90 91 21 01 	lds	r25, 0x0121
  f0:	a0 91 22 01 	lds	r26, 0x0122
  f4:	b0 91 23 01 	lds	r27, 0x0123
  f8:	80 93 24 01 	sts	0x0124, r24
  fc:	90 93 25 01 	sts	0x0125, r25
 100:	a0 93 26 01 	sts	0x0126, r26
 104:	b0 93 27 01 	sts	0x0127, r27
 108:	8f b7       	in	r24, 0x3f	; 63
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8f bf       	out	0x3f, r24	; 63
 10e:	08 95       	ret

00000110 <TimerISR>:
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	80 93 28 01 	sts	0x0128, r24
 116:	08 95       	ret

00000118 <__vector_13>:
 118:	1f 92       	push	r1
 11a:	0f 92       	push	r0
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	0f 92       	push	r0
 120:	11 24       	eor	r1, r1
 122:	0b b6       	in	r0, 0x3b	; 59
 124:	0f 92       	push	r0
 126:	2f 93       	push	r18
 128:	3f 93       	push	r19
 12a:	4f 93       	push	r20
 12c:	5f 93       	push	r21
 12e:	6f 93       	push	r22
 130:	7f 93       	push	r23
 132:	8f 93       	push	r24
 134:	9f 93       	push	r25
 136:	af 93       	push	r26
 138:	bf 93       	push	r27
 13a:	ef 93       	push	r30
 13c:	ff 93       	push	r31
 13e:	80 91 24 01 	lds	r24, 0x0124
 142:	90 91 25 01 	lds	r25, 0x0125
 146:	a0 91 26 01 	lds	r26, 0x0126
 14a:	b0 91 27 01 	lds	r27, 0x0127
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	a1 09       	sbc	r26, r1
 152:	b1 09       	sbc	r27, r1
 154:	80 93 24 01 	sts	0x0124, r24
 158:	90 93 25 01 	sts	0x0125, r25
 15c:	a0 93 26 01 	sts	0x0126, r26
 160:	b0 93 27 01 	sts	0x0127, r27
 164:	89 2b       	or	r24, r25
 166:	8a 2b       	or	r24, r26
 168:	8b 2b       	or	r24, r27
 16a:	89 f4       	brne	.+34     	; 0x18e <__vector_13+0x76>
 16c:	d1 df       	rcall	.-94     	; 0x110 <TimerISR>
 16e:	80 91 20 01 	lds	r24, 0x0120
 172:	90 91 21 01 	lds	r25, 0x0121
 176:	a0 91 22 01 	lds	r26, 0x0122
 17a:	b0 91 23 01 	lds	r27, 0x0123
 17e:	80 93 24 01 	sts	0x0124, r24
 182:	90 93 25 01 	sts	0x0125, r25
 186:	a0 93 26 01 	sts	0x0126, r26
 18a:	b0 93 27 01 	sts	0x0127, r27
 18e:	ff 91       	pop	r31
 190:	ef 91       	pop	r30
 192:	bf 91       	pop	r27
 194:	af 91       	pop	r26
 196:	9f 91       	pop	r25
 198:	8f 91       	pop	r24
 19a:	7f 91       	pop	r23
 19c:	6f 91       	pop	r22
 19e:	5f 91       	pop	r21
 1a0:	4f 91       	pop	r20
 1a2:	3f 91       	pop	r19
 1a4:	2f 91       	pop	r18
 1a6:	0f 90       	pop	r0
 1a8:	0b be       	out	0x3b, r0	; 59
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <TimerSet>:
 1b4:	60 93 20 01 	sts	0x0120, r22
 1b8:	70 93 21 01 	sts	0x0121, r23
 1bc:	80 93 22 01 	sts	0x0122, r24
 1c0:	90 93 23 01 	sts	0x0123, r25
 1c4:	60 93 24 01 	sts	0x0124, r22
 1c8:	70 93 25 01 	sts	0x0125, r23
 1cc:	80 93 26 01 	sts	0x0126, r24
 1d0:	90 93 27 01 	sts	0x0127, r25
 1d4:	08 95       	ret

000001d6 <SMChoosePitch_tick>:
 1d6:	20 b1       	in	r18, 0x00	; 0
 1d8:	90 b1       	in	r25, 0x00	; 0
 1da:	80 91 2e 01 	lds	r24, 0x012E
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	41 f0       	breq	.+16     	; 0x1f2 <SMChoosePitch_tick+0x1c>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	71 f0       	breq	.+28     	; 0x202 <SMChoosePitch_tick+0x2c>
 1e6:	81 11       	cpse	r24, r1
 1e8:	14 c0       	rjmp	.+40     	; 0x212 <SMChoosePitch_tick+0x3c>
 1ea:	84 e0       	ldi	r24, 0x04	; 4
 1ec:	80 93 2f 01 	sts	0x012F, r24
 1f0:	22 c0       	rjmp	.+68     	; 0x236 <SMChoosePitch_tick+0x60>
 1f2:	80 91 2f 01 	lds	r24, 0x012F
 1f6:	87 30       	cpi	r24, 0x07	; 7
 1f8:	70 f5       	brcc	.+92     	; 0x256 <SMChoosePitch_tick+0x80>
 1fa:	8f 5f       	subi	r24, 0xFF	; 255
 1fc:	80 93 2f 01 	sts	0x012F, r24
 200:	2a c0       	rjmp	.+84     	; 0x256 <SMChoosePitch_tick+0x80>
 202:	80 91 2f 01 	lds	r24, 0x012F
 206:	88 23       	and	r24, r24
 208:	51 f1       	breq	.+84     	; 0x25e <SMChoosePitch_tick+0x88>
 20a:	81 50       	subi	r24, 0x01	; 1
 20c:	80 93 2f 01 	sts	0x012F, r24
 210:	26 c0       	rjmp	.+76     	; 0x25e <SMChoosePitch_tick+0x88>
 212:	20 95       	com	r18
 214:	21 70       	andi	r18, 0x01	; 1
 216:	90 95       	com	r25
 218:	94 70       	andi	r25, 0x04	; 4
 21a:	82 30       	cpi	r24, 0x02	; 2
 21c:	e1 f0       	breq	.+56     	; 0x256 <SMChoosePitch_tick+0x80>
 21e:	28 f4       	brcc	.+10     	; 0x22a <SMChoosePitch_tick+0x54>
 220:	88 23       	and	r24, r24
 222:	49 f0       	breq	.+18     	; 0x236 <SMChoosePitch_tick+0x60>
 224:	81 30       	cpi	r24, 0x01	; 1
 226:	89 f5       	brne	.+98     	; 0x28a <SMChoosePitch_tick+0xb4>
 228:	0a c0       	rjmp	.+20     	; 0x23e <SMChoosePitch_tick+0x68>
 22a:	84 30       	cpi	r24, 0x04	; 4
 22c:	e1 f0       	breq	.+56     	; 0x266 <SMChoosePitch_tick+0x90>
 22e:	b8 f0       	brcs	.+46     	; 0x25e <SMChoosePitch_tick+0x88>
 230:	85 30       	cpi	r24, 0x05	; 5
 232:	59 f5       	brne	.+86     	; 0x28a <SMChoosePitch_tick+0xb4>
 234:	20 c0       	rjmp	.+64     	; 0x276 <SMChoosePitch_tick+0xa0>
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	80 93 2e 01 	sts	0x012E, r24
 23c:	08 95       	ret
 23e:	22 23       	and	r18, r18
 240:	11 f1       	breq	.+68     	; 0x286 <SMChoosePitch_tick+0xb0>
 242:	91 11       	cpse	r25, r1
 244:	22 c0       	rjmp	.+68     	; 0x28a <SMChoosePitch_tick+0xb4>
 246:	82 e0       	ldi	r24, 0x02	; 2
 248:	80 93 2e 01 	sts	0x012E, r24
 24c:	08 95       	ret
 24e:	83 e0       	ldi	r24, 0x03	; 3
 250:	80 93 2e 01 	sts	0x012E, r24
 254:	08 95       	ret
 256:	84 e0       	ldi	r24, 0x04	; 4
 258:	80 93 2e 01 	sts	0x012E, r24
 25c:	08 95       	ret
 25e:	85 e0       	ldi	r24, 0x05	; 5
 260:	80 93 2e 01 	sts	0x012E, r24
 264:	08 95       	ret
 266:	21 11       	cpse	r18, r1
 268:	10 c0       	rjmp	.+32     	; 0x28a <SMChoosePitch_tick+0xb4>
 26a:	91 11       	cpse	r25, r1
 26c:	0e c0       	rjmp	.+28     	; 0x28a <SMChoosePitch_tick+0xb4>
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	80 93 2e 01 	sts	0x012E, r24
 274:	08 95       	ret
 276:	21 11       	cpse	r18, r1
 278:	08 c0       	rjmp	.+16     	; 0x28a <SMChoosePitch_tick+0xb4>
 27a:	91 11       	cpse	r25, r1
 27c:	06 c0       	rjmp	.+12     	; 0x28a <SMChoosePitch_tick+0xb4>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 2e 01 	sts	0x012E, r24
 284:	08 95       	ret
 286:	91 11       	cpse	r25, r1
 288:	e2 cf       	rjmp	.-60     	; 0x24e <SMChoosePitch_tick+0x78>
 28a:	08 95       	ret

0000028c <set_PWM>:



//NOTE*** THIS NEW CODE TARGETS PB6 NOT PB3

void set_PWM(double frequency) {
 28c:	cf 92       	push	r12
 28e:	df 92       	push	r13
 290:	ef 92       	push	r14
 292:	ff 92       	push	r15
 294:	6b 01       	movw	r12, r22
 296:	7c 01       	movw	r14, r24
	// Keeps track of the currently set frequency
	// Will only update the registers when the frequency
	// changes, plays music uninterrupted.
	static double current_frequency;
	if (frequency != current_frequency) {
 298:	20 91 29 01 	lds	r18, 0x0129
 29c:	30 91 2a 01 	lds	r19, 0x012A
 2a0:	40 91 2b 01 	lds	r20, 0x012B
 2a4:	50 91 2c 01 	lds	r21, 0x012C
 2a8:	f0 d0       	rcall	.+480    	; 0x48a <__cmpsf2>
 2aa:	88 23       	and	r24, r24
 2ac:	09 f4       	brne	.+2      	; 0x2b0 <set_PWM+0x24>
 2ae:	52 c0       	rjmp	.+164    	; 0x354 <set_PWM+0xc8>

		if (!frequency) TCCR3B &= 0x08; //stops timer/counter
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	a9 01       	movw	r20, r18
 2b6:	c7 01       	movw	r24, r14
 2b8:	b6 01       	movw	r22, r12
 2ba:	e7 d0       	rcall	.+462    	; 0x48a <__cmpsf2>
 2bc:	81 11       	cpse	r24, r1
 2be:	06 c0       	rjmp	.+12     	; 0x2cc <set_PWM+0x40>
 2c0:	e1 e9       	ldi	r30, 0x91	; 145
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	88 70       	andi	r24, 0x08	; 8
 2c8:	80 83       	st	Z, r24
 2ca:	05 c0       	rjmp	.+10     	; 0x2d6 <set_PWM+0x4a>
		else TCCR3B |= 0x03; // resumes/continues timer/counter
 2cc:	e1 e9       	ldi	r30, 0x91	; 145
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	83 60       	ori	r24, 0x03	; 3
 2d4:	80 83       	st	Z, r24
		
		// prevents OCR3A from overflowing, using prescaler 64
		// 0.954 is smallest frequency that will not result in overflow
		if (frequency < 0.954) OCR3A = 0xFFFF;
 2d6:	28 e5       	ldi	r18, 0x58	; 88
 2d8:	39 e3       	ldi	r19, 0x39	; 57
 2da:	44 e7       	ldi	r20, 0x74	; 116
 2dc:	5f e3       	ldi	r21, 0x3F	; 63
 2de:	c7 01       	movw	r24, r14
 2e0:	b6 01       	movw	r22, r12
 2e2:	d3 d0       	rcall	.+422    	; 0x48a <__cmpsf2>
 2e4:	88 23       	and	r24, r24
 2e6:	3c f4       	brge	.+14     	; 0x2f6 <set_PWM+0x6a>
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	9f ef       	ldi	r25, 0xFF	; 255
 2ec:	90 93 99 00 	sts	0x0099, r25
 2f0:	80 93 98 00 	sts	0x0098, r24
 2f4:	23 c0       	rjmp	.+70     	; 0x33c <set_PWM+0xb0>
		
		// prevents OCR3A from underflowing, using prescaler 64					// 31250 is largest frequency that will not result in underflow
		else if (frequency > 31250) OCR3A = 0x0000;
 2f6:	20 e0       	ldi	r18, 0x00	; 0
 2f8:	34 e2       	ldi	r19, 0x24	; 36
 2fa:	44 ef       	ldi	r20, 0xF4	; 244
 2fc:	56 e4       	ldi	r21, 0x46	; 70
 2fe:	c7 01       	movw	r24, r14
 300:	b6 01       	movw	r22, r12
 302:	d5 d1       	rcall	.+938    	; 0x6ae <__gesf2>
 304:	18 16       	cp	r1, r24
 306:	2c f4       	brge	.+10     	; 0x312 <set_PWM+0x86>
 308:	10 92 99 00 	sts	0x0099, r1
 30c:	10 92 98 00 	sts	0x0098, r1
 310:	15 c0       	rjmp	.+42     	; 0x33c <set_PWM+0xb0>
		
		// set OCR3A based on desired frequency
		else OCR3A = (short)(8000000 / (128 * frequency)) - 1;
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	53 e4       	ldi	r21, 0x43	; 67
 31a:	c7 01       	movw	r24, r14
 31c:	b6 01       	movw	r22, r12
 31e:	cb d1       	rcall	.+918    	; 0x6b6 <__mulsf3>
 320:	9b 01       	movw	r18, r22
 322:	ac 01       	movw	r20, r24
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	74 e2       	ldi	r23, 0x24	; 36
 328:	84 ef       	ldi	r24, 0xF4	; 244
 32a:	9a e4       	ldi	r25, 0x4A	; 74
 32c:	b2 d0       	rcall	.+356    	; 0x492 <__divsf3>
 32e:	19 d1       	rcall	.+562    	; 0x562 <__fixsfsi>
 330:	61 50       	subi	r22, 0x01	; 1
 332:	71 09       	sbc	r23, r1
 334:	70 93 99 00 	sts	0x0099, r23
 338:	60 93 98 00 	sts	0x0098, r22

		TCNT3 = 0; // resets counter
 33c:	10 92 95 00 	sts	0x0095, r1
 340:	10 92 94 00 	sts	0x0094, r1
		current_frequency = frequency;
 344:	c0 92 29 01 	sts	0x0129, r12
 348:	d0 92 2a 01 	sts	0x012A, r13
 34c:	e0 92 2b 01 	sts	0x012B, r14
 350:	f0 92 2c 01 	sts	0x012C, r15
	}
}
 354:	ff 90       	pop	r15
 356:	ef 90       	pop	r14
 358:	df 90       	pop	r13
 35a:	cf 90       	pop	r12
 35c:	08 95       	ret

0000035e <PWM_on>:

void PWM_on() {
	TCCR3A = (1 << COM3A0);
 35e:	80 e4       	ldi	r24, 0x40	; 64
 360:	80 93 90 00 	sts	0x0090, r24
	// COM3A0: Toggle PB6 on compare match between counter and OCR3A
	TCCR3B = (1 << WGM32) | (1 << CS31) | (1 << CS30);
 364:	8b e0       	ldi	r24, 0x0B	; 11
 366:	80 93 91 00 	sts	0x0091, r24
	// WGM32: When counter (TCNT3) matches OCR3A, reset counter
	// CS31 & CS30: Set a prescaler of 64
	set_PWM(0);
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	cb 01       	movw	r24, r22
 370:	8d cf       	rjmp	.-230    	; 0x28c <set_PWM>

00000372 <PWM_off>:
}

void PWM_off() {
	TCCR3A = 0x00;
 372:	10 92 90 00 	sts	0x0090, r1
	TCCR3B = 0x00;
 376:	10 92 91 00 	sts	0x0091, r1
 37a:	08 95       	ret

0000037c <SMSpeaker_tick>:
			break;
	}
	//PORTB = currPitch;
}
enum SMSpeakerStates { SPEAKER_INIT, SPEAKER_OFF, SPEAKER_ON, SPEAKER_OFF_WAIT, SPEAKER_ON_WAIT } StateSpeaker;
void SMSpeaker_tick(){
 37c:	cf 93       	push	r28
	unsigned char bOnInput = ONBUTTON;
 37e:	c0 b1       	in	r28, 0x00	; 0
 380:	c0 95       	com	r28
 382:	c2 70       	andi	r28, 0x02	; 2
	switch(StateSpeaker){
 384:	80 91 2d 01 	lds	r24, 0x012D
 388:	82 30       	cpi	r24, 0x02	; 2
 38a:	69 f0       	breq	.+26     	; 0x3a6 <SMSpeaker_tick+0x2a>
 38c:	18 f4       	brcc	.+6      	; 0x394 <SMSpeaker_tick+0x18>
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	79 f5       	brne	.+94     	; 0x3f0 <SMSpeaker_tick+0x74>
 392:	05 c0       	rjmp	.+10     	; 0x39e <SMSpeaker_tick+0x22>
 394:	83 30       	cpi	r24, 0x03	; 3
 396:	c9 f0       	breq	.+50     	; 0x3ca <SMSpeaker_tick+0x4e>
 398:	84 30       	cpi	r24, 0x04	; 4
 39a:	51 f5       	brne	.+84     	; 0x3f0 <SMSpeaker_tick+0x74>
 39c:	19 c0       	rjmp	.+50     	; 0x3d0 <SMSpeaker_tick+0x54>
		case SPEAKER_INIT:
			break;
		case SPEAKER_OFF:
			PORTD = 0x01;
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	8b b9       	out	0x0b, r24	; 11
			PWM_off();
 3a2:	e7 df       	rcall	.-50     	; 0x372 <PWM_off>
			break;
 3a4:	25 c0       	rjmp	.+74     	; 0x3f0 <SMSpeaker_tick+0x74>
		case SPEAKER_ON:
			PORTD = 0x02;
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	8b b9       	out	0x0b, r24	; 11
			PWM_on();
 3aa:	d9 df       	rcall	.-78     	; 0x35e <PWM_on>
			set_PWM(pitchScale[currPitch]);
 3ac:	e0 91 2f 01 	lds	r30, 0x012F
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	ee 0f       	add	r30, r30
 3b4:	ff 1f       	adc	r31, r31
 3b6:	ee 0f       	add	r30, r30
 3b8:	ff 1f       	adc	r31, r31
 3ba:	e0 50       	subi	r30, 0x00	; 0
 3bc:	ff 4f       	sbci	r31, 0xFF	; 255
 3be:	60 81       	ld	r22, Z
 3c0:	71 81       	ldd	r23, Z+1	; 0x01
 3c2:	82 81       	ldd	r24, Z+2	; 0x02
 3c4:	93 81       	ldd	r25, Z+3	; 0x03
 3c6:	62 df       	rcall	.-316    	; 0x28c <set_PWM>
			break;
 3c8:	13 c0       	rjmp	.+38     	; 0x3f0 <SMSpeaker_tick+0x74>
		case SPEAKER_OFF_WAIT:
			PORTD = 0x04;
 3ca:	84 e0       	ldi	r24, 0x04	; 4
 3cc:	8b b9       	out	0x0b, r24	; 11
			break;
 3ce:	10 c0       	rjmp	.+32     	; 0x3f0 <SMSpeaker_tick+0x74>
		case SPEAKER_ON_WAIT:
			PORTD = 0x08;
 3d0:	88 e0       	ldi	r24, 0x08	; 8
 3d2:	8b b9       	out	0x0b, r24	; 11
			set_PWM(pitchScale[currPitch]);
 3d4:	e0 91 2f 01 	lds	r30, 0x012F
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	ee 0f       	add	r30, r30
 3dc:	ff 1f       	adc	r31, r31
 3de:	ee 0f       	add	r30, r30
 3e0:	ff 1f       	adc	r31, r31
 3e2:	e0 50       	subi	r30, 0x00	; 0
 3e4:	ff 4f       	sbci	r31, 0xFF	; 255
 3e6:	60 81       	ld	r22, Z
 3e8:	71 81       	ldd	r23, Z+1	; 0x01
 3ea:	82 81       	ldd	r24, Z+2	; 0x02
 3ec:	93 81       	ldd	r25, Z+3	; 0x03
 3ee:	4e df       	rcall	.-356    	; 0x28c <set_PWM>
			break;
		default:
			break;
	}
	switch(StateSpeaker){
 3f0:	80 91 2d 01 	lds	r24, 0x012D
 3f4:	82 30       	cpi	r24, 0x02	; 2
 3f6:	a9 f0       	breq	.+42     	; 0x422 <SMSpeaker_tick+0xa6>
 3f8:	28 f4       	brcc	.+10     	; 0x404 <SMSpeaker_tick+0x88>
 3fa:	88 23       	and	r24, r24
 3fc:	41 f0       	breq	.+16     	; 0x40e <SMSpeaker_tick+0x92>
 3fe:	81 30       	cpi	r24, 0x01	; 1
 400:	09 f5       	brne	.+66     	; 0x444 <SMSpeaker_tick+0xc8>
 402:	09 c0       	rjmp	.+18     	; 0x416 <SMSpeaker_tick+0x9a>
 404:	83 30       	cpi	r24, 0x03	; 3
 406:	99 f0       	breq	.+38     	; 0x42e <SMSpeaker_tick+0xb2>
 408:	84 30       	cpi	r24, 0x04	; 4
 40a:	e1 f4       	brne	.+56     	; 0x444 <SMSpeaker_tick+0xc8>
 40c:	16 c0       	rjmp	.+44     	; 0x43a <SMSpeaker_tick+0xbe>
		case SPEAKER_INIT:
			StateSpeaker = SPEAKER_OFF_WAIT;
 40e:	83 e0       	ldi	r24, 0x03	; 3
 410:	80 93 2d 01 	sts	0x012D, r24
			break;
 414:	17 c0       	rjmp	.+46     	; 0x444 <SMSpeaker_tick+0xc8>
		case SPEAKER_OFF:
			if(bOnInput == 0){
 416:	c1 11       	cpse	r28, r1
 418:	15 c0       	rjmp	.+42     	; 0x444 <SMSpeaker_tick+0xc8>
				StateSpeaker = SPEAKER_OFF_WAIT;
 41a:	83 e0       	ldi	r24, 0x03	; 3
 41c:	80 93 2d 01 	sts	0x012D, r24
 420:	11 c0       	rjmp	.+34     	; 0x444 <SMSpeaker_tick+0xc8>
			}
			break;
		case SPEAKER_ON:
			if(bOnInput == 0){
 422:	c1 11       	cpse	r28, r1
 424:	0f c0       	rjmp	.+30     	; 0x444 <SMSpeaker_tick+0xc8>
				StateSpeaker = SPEAKER_ON_WAIT;
 426:	84 e0       	ldi	r24, 0x04	; 4
 428:	80 93 2d 01 	sts	0x012D, r24
 42c:	0b c0       	rjmp	.+22     	; 0x444 <SMSpeaker_tick+0xc8>
			}
			break;
		case SPEAKER_OFF_WAIT:
			if(bOnInput != 0){
 42e:	cc 23       	and	r28, r28
 430:	49 f0       	breq	.+18     	; 0x444 <SMSpeaker_tick+0xc8>
				StateSpeaker = SPEAKER_ON;
 432:	82 e0       	ldi	r24, 0x02	; 2
 434:	80 93 2d 01 	sts	0x012D, r24
 438:	05 c0       	rjmp	.+10     	; 0x444 <SMSpeaker_tick+0xc8>
			}
			break;
		case SPEAKER_ON_WAIT:
			if(bOnInput != 0){
 43a:	cc 23       	and	r28, r28
 43c:	19 f0       	breq	.+6      	; 0x444 <SMSpeaker_tick+0xc8>
				StateSpeaker = SPEAKER_OFF;
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	80 93 2d 01 	sts	0x012D, r24
			}
		default:
			break;
	}
	return 0;
}
 444:	cf 91       	pop	r28
 446:	08 95       	ret

00000448 <main>:
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
 448:	11 b8       	out	0x01, r1	; 1
 44a:	8f ef       	ldi	r24, 0xFF	; 255
 44c:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 44e:	84 b9       	out	0x04, r24	; 4
 450:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x0F;
 452:	8a b9       	out	0x0a, r24	; 10
 454:	8f e0       	ldi	r24, 0x0F	; 15
 456:	8b b9       	out	0x0b, r24	; 11
	//PWM_on();
	TimerSet(500);
 458:	64 ef       	ldi	r22, 0xF4	; 244
 45a:	71 e0       	ldi	r23, 0x01	; 1
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	a9 de       	rcall	.-686    	; 0x1b4 <TimerSet>
	TimerOn();
 462:	32 de       	rcall	.-924    	; 0xc8 <TimerOn>
	StateSpeaker = SPEAKER_INIT;
 464:	10 92 2d 01 	sts	0x012D, r1
	StatePitch = PITCH_INIT;
 468:	10 92 2e 01 	sts	0x012E, r1
	TimerSet(100);
 46c:	64 e6       	ldi	r22, 0x64	; 100
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	9f de       	rcall	.-706    	; 0x1b4 <TimerSet>
	TimerOn();
 476:	28 de       	rcall	.-944    	; 0xc8 <TimerOn>

	//PWM_on();
    while(1)
    {
		//set_PWM(pitchScale[5]);
		SMSpeaker_tick();
 478:	81 df       	rcall	.-254    	; 0x37c <SMSpeaker_tick>
		SMChoosePitch_tick();
 47a:	ad de       	rcall	.-678    	; 0x1d6 <SMChoosePitch_tick>
		while(!TimerFlag);
 47c:	80 91 28 01 	lds	r24, 0x0128
 480:	88 23       	and	r24, r24
 482:	e1 f3       	breq	.-8      	; 0x47c <main+0x34>
		TimerFlag = 0;	
 484:	10 92 28 01 	sts	0x0128, r1
    }
 488:	f7 cf       	rjmp	.-18     	; 0x478 <main+0x30>

0000048a <__cmpsf2>:
 48a:	9c d0       	rcall	.+312    	; 0x5c4 <__fp_cmp>
 48c:	08 f4       	brcc	.+2      	; 0x490 <__cmpsf2+0x6>
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	08 95       	ret

00000492 <__divsf3>:
 492:	0c d0       	rcall	.+24     	; 0x4ac <__divsf3x>
 494:	d2 c0       	rjmp	.+420    	; 0x63a <__fp_round>
 496:	ca d0       	rcall	.+404    	; 0x62c <__fp_pscB>
 498:	40 f0       	brcs	.+16     	; 0x4aa <__divsf3+0x18>
 49a:	c1 d0       	rcall	.+386    	; 0x61e <__fp_pscA>
 49c:	30 f0       	brcs	.+12     	; 0x4aa <__divsf3+0x18>
 49e:	21 f4       	brne	.+8      	; 0x4a8 <__divsf3+0x16>
 4a0:	5f 3f       	cpi	r21, 0xFF	; 255
 4a2:	19 f0       	breq	.+6      	; 0x4aa <__divsf3+0x18>
 4a4:	b3 c0       	rjmp	.+358    	; 0x60c <__fp_inf>
 4a6:	51 11       	cpse	r21, r1
 4a8:	fc c0       	rjmp	.+504    	; 0x6a2 <__fp_szero>
 4aa:	b6 c0       	rjmp	.+364    	; 0x618 <__fp_nan>

000004ac <__divsf3x>:
 4ac:	d7 d0       	rcall	.+430    	; 0x65c <__fp_split3>
 4ae:	98 f3       	brcs	.-26     	; 0x496 <__divsf3+0x4>

000004b0 <__divsf3_pse>:
 4b0:	99 23       	and	r25, r25
 4b2:	c9 f3       	breq	.-14     	; 0x4a6 <__divsf3+0x14>
 4b4:	55 23       	and	r21, r21
 4b6:	b1 f3       	breq	.-20     	; 0x4a4 <__divsf3+0x12>
 4b8:	95 1b       	sub	r25, r21
 4ba:	55 0b       	sbc	r21, r21
 4bc:	bb 27       	eor	r27, r27
 4be:	aa 27       	eor	r26, r26
 4c0:	62 17       	cp	r22, r18
 4c2:	73 07       	cpc	r23, r19
 4c4:	84 07       	cpc	r24, r20
 4c6:	38 f0       	brcs	.+14     	; 0x4d6 <__divsf3_pse+0x26>
 4c8:	9f 5f       	subi	r25, 0xFF	; 255
 4ca:	5f 4f       	sbci	r21, 0xFF	; 255
 4cc:	22 0f       	add	r18, r18
 4ce:	33 1f       	adc	r19, r19
 4d0:	44 1f       	adc	r20, r20
 4d2:	aa 1f       	adc	r26, r26
 4d4:	a9 f3       	breq	.-22     	; 0x4c0 <__divsf3_pse+0x10>
 4d6:	33 d0       	rcall	.+102    	; 0x53e <__divsf3_pse+0x8e>
 4d8:	0e 2e       	mov	r0, r30
 4da:	3a f0       	brmi	.+14     	; 0x4ea <__divsf3_pse+0x3a>
 4dc:	e0 e8       	ldi	r30, 0x80	; 128
 4de:	30 d0       	rcall	.+96     	; 0x540 <__divsf3_pse+0x90>
 4e0:	91 50       	subi	r25, 0x01	; 1
 4e2:	50 40       	sbci	r21, 0x00	; 0
 4e4:	e6 95       	lsr	r30
 4e6:	00 1c       	adc	r0, r0
 4e8:	ca f7       	brpl	.-14     	; 0x4dc <__divsf3_pse+0x2c>
 4ea:	29 d0       	rcall	.+82     	; 0x53e <__divsf3_pse+0x8e>
 4ec:	fe 2f       	mov	r31, r30
 4ee:	27 d0       	rcall	.+78     	; 0x53e <__divsf3_pse+0x8e>
 4f0:	66 0f       	add	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	bb 1f       	adc	r27, r27
 4f8:	26 17       	cp	r18, r22
 4fa:	37 07       	cpc	r19, r23
 4fc:	48 07       	cpc	r20, r24
 4fe:	ab 07       	cpc	r26, r27
 500:	b0 e8       	ldi	r27, 0x80	; 128
 502:	09 f0       	breq	.+2      	; 0x506 <__divsf3_pse+0x56>
 504:	bb 0b       	sbc	r27, r27
 506:	80 2d       	mov	r24, r0
 508:	bf 01       	movw	r22, r30
 50a:	ff 27       	eor	r31, r31
 50c:	93 58       	subi	r25, 0x83	; 131
 50e:	5f 4f       	sbci	r21, 0xFF	; 255
 510:	2a f0       	brmi	.+10     	; 0x51c <__divsf3_pse+0x6c>
 512:	9e 3f       	cpi	r25, 0xFE	; 254
 514:	51 05       	cpc	r21, r1
 516:	68 f0       	brcs	.+26     	; 0x532 <__divsf3_pse+0x82>
 518:	79 c0       	rjmp	.+242    	; 0x60c <__fp_inf>
 51a:	c3 c0       	rjmp	.+390    	; 0x6a2 <__fp_szero>
 51c:	5f 3f       	cpi	r21, 0xFF	; 255
 51e:	ec f3       	brlt	.-6      	; 0x51a <__divsf3_pse+0x6a>
 520:	98 3e       	cpi	r25, 0xE8	; 232
 522:	dc f3       	brlt	.-10     	; 0x51a <__divsf3_pse+0x6a>
 524:	86 95       	lsr	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b7 95       	ror	r27
 52c:	f7 95       	ror	r31
 52e:	9f 5f       	subi	r25, 0xFF	; 255
 530:	c9 f7       	brne	.-14     	; 0x524 <__divsf3_pse+0x74>
 532:	88 0f       	add	r24, r24
 534:	91 1d       	adc	r25, r1
 536:	96 95       	lsr	r25
 538:	87 95       	ror	r24
 53a:	97 f9       	bld	r25, 7
 53c:	08 95       	ret
 53e:	e1 e0       	ldi	r30, 0x01	; 1
 540:	66 0f       	add	r22, r22
 542:	77 1f       	adc	r23, r23
 544:	88 1f       	adc	r24, r24
 546:	bb 1f       	adc	r27, r27
 548:	62 17       	cp	r22, r18
 54a:	73 07       	cpc	r23, r19
 54c:	84 07       	cpc	r24, r20
 54e:	ba 07       	cpc	r27, r26
 550:	20 f0       	brcs	.+8      	; 0x55a <__divsf3_pse+0xaa>
 552:	62 1b       	sub	r22, r18
 554:	73 0b       	sbc	r23, r19
 556:	84 0b       	sbc	r24, r20
 558:	ba 0b       	sbc	r27, r26
 55a:	ee 1f       	adc	r30, r30
 55c:	88 f7       	brcc	.-30     	; 0x540 <__divsf3_pse+0x90>
 55e:	e0 95       	com	r30
 560:	08 95       	ret

00000562 <__fixsfsi>:
 562:	04 d0       	rcall	.+8      	; 0x56c <__fixunssfsi>
 564:	68 94       	set
 566:	b1 11       	cpse	r27, r1
 568:	9c c0       	rjmp	.+312    	; 0x6a2 <__fp_szero>
 56a:	08 95       	ret

0000056c <__fixunssfsi>:
 56c:	7f d0       	rcall	.+254    	; 0x66c <__fp_splitA>
 56e:	88 f0       	brcs	.+34     	; 0x592 <__fixunssfsi+0x26>
 570:	9f 57       	subi	r25, 0x7F	; 127
 572:	90 f0       	brcs	.+36     	; 0x598 <__fixunssfsi+0x2c>
 574:	b9 2f       	mov	r27, r25
 576:	99 27       	eor	r25, r25
 578:	b7 51       	subi	r27, 0x17	; 23
 57a:	a0 f0       	brcs	.+40     	; 0x5a4 <__fixunssfsi+0x38>
 57c:	d1 f0       	breq	.+52     	; 0x5b2 <__fixunssfsi+0x46>
 57e:	66 0f       	add	r22, r22
 580:	77 1f       	adc	r23, r23
 582:	88 1f       	adc	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	1a f0       	brmi	.+6      	; 0x58e <__fixunssfsi+0x22>
 588:	ba 95       	dec	r27
 58a:	c9 f7       	brne	.-14     	; 0x57e <__fixunssfsi+0x12>
 58c:	12 c0       	rjmp	.+36     	; 0x5b2 <__fixunssfsi+0x46>
 58e:	b1 30       	cpi	r27, 0x01	; 1
 590:	81 f0       	breq	.+32     	; 0x5b2 <__fixunssfsi+0x46>
 592:	86 d0       	rcall	.+268    	; 0x6a0 <__fp_zero>
 594:	b1 e0       	ldi	r27, 0x01	; 1
 596:	08 95       	ret
 598:	83 c0       	rjmp	.+262    	; 0x6a0 <__fp_zero>
 59a:	67 2f       	mov	r22, r23
 59c:	78 2f       	mov	r23, r24
 59e:	88 27       	eor	r24, r24
 5a0:	b8 5f       	subi	r27, 0xF8	; 248
 5a2:	39 f0       	breq	.+14     	; 0x5b2 <__fixunssfsi+0x46>
 5a4:	b9 3f       	cpi	r27, 0xF9	; 249
 5a6:	cc f3       	brlt	.-14     	; 0x59a <__fixunssfsi+0x2e>
 5a8:	86 95       	lsr	r24
 5aa:	77 95       	ror	r23
 5ac:	67 95       	ror	r22
 5ae:	b3 95       	inc	r27
 5b0:	d9 f7       	brne	.-10     	; 0x5a8 <__fixunssfsi+0x3c>
 5b2:	3e f4       	brtc	.+14     	; 0x5c2 <__fixunssfsi+0x56>
 5b4:	90 95       	com	r25
 5b6:	80 95       	com	r24
 5b8:	70 95       	com	r23
 5ba:	61 95       	neg	r22
 5bc:	7f 4f       	sbci	r23, 0xFF	; 255
 5be:	8f 4f       	sbci	r24, 0xFF	; 255
 5c0:	9f 4f       	sbci	r25, 0xFF	; 255
 5c2:	08 95       	ret

000005c4 <__fp_cmp>:
 5c4:	99 0f       	add	r25, r25
 5c6:	00 08       	sbc	r0, r0
 5c8:	55 0f       	add	r21, r21
 5ca:	aa 0b       	sbc	r26, r26
 5cc:	e0 e8       	ldi	r30, 0x80	; 128
 5ce:	fe ef       	ldi	r31, 0xFE	; 254
 5d0:	16 16       	cp	r1, r22
 5d2:	17 06       	cpc	r1, r23
 5d4:	e8 07       	cpc	r30, r24
 5d6:	f9 07       	cpc	r31, r25
 5d8:	c0 f0       	brcs	.+48     	; 0x60a <__fp_cmp+0x46>
 5da:	12 16       	cp	r1, r18
 5dc:	13 06       	cpc	r1, r19
 5de:	e4 07       	cpc	r30, r20
 5e0:	f5 07       	cpc	r31, r21
 5e2:	98 f0       	brcs	.+38     	; 0x60a <__fp_cmp+0x46>
 5e4:	62 1b       	sub	r22, r18
 5e6:	73 0b       	sbc	r23, r19
 5e8:	84 0b       	sbc	r24, r20
 5ea:	95 0b       	sbc	r25, r21
 5ec:	39 f4       	brne	.+14     	; 0x5fc <__fp_cmp+0x38>
 5ee:	0a 26       	eor	r0, r26
 5f0:	61 f0       	breq	.+24     	; 0x60a <__fp_cmp+0x46>
 5f2:	23 2b       	or	r18, r19
 5f4:	24 2b       	or	r18, r20
 5f6:	25 2b       	or	r18, r21
 5f8:	21 f4       	brne	.+8      	; 0x602 <__fp_cmp+0x3e>
 5fa:	08 95       	ret
 5fc:	0a 26       	eor	r0, r26
 5fe:	09 f4       	brne	.+2      	; 0x602 <__fp_cmp+0x3e>
 600:	a1 40       	sbci	r26, 0x01	; 1
 602:	a6 95       	lsr	r26
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	81 1d       	adc	r24, r1
 608:	81 1d       	adc	r24, r1
 60a:	08 95       	ret

0000060c <__fp_inf>:
 60c:	97 f9       	bld	r25, 7
 60e:	9f 67       	ori	r25, 0x7F	; 127
 610:	80 e8       	ldi	r24, 0x80	; 128
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	60 e0       	ldi	r22, 0x00	; 0
 616:	08 95       	ret

00000618 <__fp_nan>:
 618:	9f ef       	ldi	r25, 0xFF	; 255
 61a:	80 ec       	ldi	r24, 0xC0	; 192
 61c:	08 95       	ret

0000061e <__fp_pscA>:
 61e:	00 24       	eor	r0, r0
 620:	0a 94       	dec	r0
 622:	16 16       	cp	r1, r22
 624:	17 06       	cpc	r1, r23
 626:	18 06       	cpc	r1, r24
 628:	09 06       	cpc	r0, r25
 62a:	08 95       	ret

0000062c <__fp_pscB>:
 62c:	00 24       	eor	r0, r0
 62e:	0a 94       	dec	r0
 630:	12 16       	cp	r1, r18
 632:	13 06       	cpc	r1, r19
 634:	14 06       	cpc	r1, r20
 636:	05 06       	cpc	r0, r21
 638:	08 95       	ret

0000063a <__fp_round>:
 63a:	09 2e       	mov	r0, r25
 63c:	03 94       	inc	r0
 63e:	00 0c       	add	r0, r0
 640:	11 f4       	brne	.+4      	; 0x646 <__fp_round+0xc>
 642:	88 23       	and	r24, r24
 644:	52 f0       	brmi	.+20     	; 0x65a <__fp_round+0x20>
 646:	bb 0f       	add	r27, r27
 648:	40 f4       	brcc	.+16     	; 0x65a <__fp_round+0x20>
 64a:	bf 2b       	or	r27, r31
 64c:	11 f4       	brne	.+4      	; 0x652 <__fp_round+0x18>
 64e:	60 ff       	sbrs	r22, 0
 650:	04 c0       	rjmp	.+8      	; 0x65a <__fp_round+0x20>
 652:	6f 5f       	subi	r22, 0xFF	; 255
 654:	7f 4f       	sbci	r23, 0xFF	; 255
 656:	8f 4f       	sbci	r24, 0xFF	; 255
 658:	9f 4f       	sbci	r25, 0xFF	; 255
 65a:	08 95       	ret

0000065c <__fp_split3>:
 65c:	57 fd       	sbrc	r21, 7
 65e:	90 58       	subi	r25, 0x80	; 128
 660:	44 0f       	add	r20, r20
 662:	55 1f       	adc	r21, r21
 664:	59 f0       	breq	.+22     	; 0x67c <__fp_splitA+0x10>
 666:	5f 3f       	cpi	r21, 0xFF	; 255
 668:	71 f0       	breq	.+28     	; 0x686 <__fp_splitA+0x1a>
 66a:	47 95       	ror	r20

0000066c <__fp_splitA>:
 66c:	88 0f       	add	r24, r24
 66e:	97 fb       	bst	r25, 7
 670:	99 1f       	adc	r25, r25
 672:	61 f0       	breq	.+24     	; 0x68c <__fp_splitA+0x20>
 674:	9f 3f       	cpi	r25, 0xFF	; 255
 676:	79 f0       	breq	.+30     	; 0x696 <__fp_splitA+0x2a>
 678:	87 95       	ror	r24
 67a:	08 95       	ret
 67c:	12 16       	cp	r1, r18
 67e:	13 06       	cpc	r1, r19
 680:	14 06       	cpc	r1, r20
 682:	55 1f       	adc	r21, r21
 684:	f2 cf       	rjmp	.-28     	; 0x66a <__fp_split3+0xe>
 686:	46 95       	lsr	r20
 688:	f1 df       	rcall	.-30     	; 0x66c <__fp_splitA>
 68a:	08 c0       	rjmp	.+16     	; 0x69c <__fp_splitA+0x30>
 68c:	16 16       	cp	r1, r22
 68e:	17 06       	cpc	r1, r23
 690:	18 06       	cpc	r1, r24
 692:	99 1f       	adc	r25, r25
 694:	f1 cf       	rjmp	.-30     	; 0x678 <__fp_splitA+0xc>
 696:	86 95       	lsr	r24
 698:	71 05       	cpc	r23, r1
 69a:	61 05       	cpc	r22, r1
 69c:	08 94       	sec
 69e:	08 95       	ret

000006a0 <__fp_zero>:
 6a0:	e8 94       	clt

000006a2 <__fp_szero>:
 6a2:	bb 27       	eor	r27, r27
 6a4:	66 27       	eor	r22, r22
 6a6:	77 27       	eor	r23, r23
 6a8:	cb 01       	movw	r24, r22
 6aa:	97 f9       	bld	r25, 7
 6ac:	08 95       	ret

000006ae <__gesf2>:
 6ae:	8a df       	rcall	.-236    	; 0x5c4 <__fp_cmp>
 6b0:	08 f4       	brcc	.+2      	; 0x6b4 <__gesf2+0x6>
 6b2:	8f ef       	ldi	r24, 0xFF	; 255
 6b4:	08 95       	ret

000006b6 <__mulsf3>:
 6b6:	0b d0       	rcall	.+22     	; 0x6ce <__mulsf3x>
 6b8:	c0 cf       	rjmp	.-128    	; 0x63a <__fp_round>
 6ba:	b1 df       	rcall	.-158    	; 0x61e <__fp_pscA>
 6bc:	28 f0       	brcs	.+10     	; 0x6c8 <__mulsf3+0x12>
 6be:	b6 df       	rcall	.-148    	; 0x62c <__fp_pscB>
 6c0:	18 f0       	brcs	.+6      	; 0x6c8 <__mulsf3+0x12>
 6c2:	95 23       	and	r25, r21
 6c4:	09 f0       	breq	.+2      	; 0x6c8 <__mulsf3+0x12>
 6c6:	a2 cf       	rjmp	.-188    	; 0x60c <__fp_inf>
 6c8:	a7 cf       	rjmp	.-178    	; 0x618 <__fp_nan>
 6ca:	11 24       	eor	r1, r1
 6cc:	ea cf       	rjmp	.-44     	; 0x6a2 <__fp_szero>

000006ce <__mulsf3x>:
 6ce:	c6 df       	rcall	.-116    	; 0x65c <__fp_split3>
 6d0:	a0 f3       	brcs	.-24     	; 0x6ba <__mulsf3+0x4>

000006d2 <__mulsf3_pse>:
 6d2:	95 9f       	mul	r25, r21
 6d4:	d1 f3       	breq	.-12     	; 0x6ca <__mulsf3+0x14>
 6d6:	95 0f       	add	r25, r21
 6d8:	50 e0       	ldi	r21, 0x00	; 0
 6da:	55 1f       	adc	r21, r21
 6dc:	62 9f       	mul	r22, r18
 6de:	f0 01       	movw	r30, r0
 6e0:	72 9f       	mul	r23, r18
 6e2:	bb 27       	eor	r27, r27
 6e4:	f0 0d       	add	r31, r0
 6e6:	b1 1d       	adc	r27, r1
 6e8:	63 9f       	mul	r22, r19
 6ea:	aa 27       	eor	r26, r26
 6ec:	f0 0d       	add	r31, r0
 6ee:	b1 1d       	adc	r27, r1
 6f0:	aa 1f       	adc	r26, r26
 6f2:	64 9f       	mul	r22, r20
 6f4:	66 27       	eor	r22, r22
 6f6:	b0 0d       	add	r27, r0
 6f8:	a1 1d       	adc	r26, r1
 6fa:	66 1f       	adc	r22, r22
 6fc:	82 9f       	mul	r24, r18
 6fe:	22 27       	eor	r18, r18
 700:	b0 0d       	add	r27, r0
 702:	a1 1d       	adc	r26, r1
 704:	62 1f       	adc	r22, r18
 706:	73 9f       	mul	r23, r19
 708:	b0 0d       	add	r27, r0
 70a:	a1 1d       	adc	r26, r1
 70c:	62 1f       	adc	r22, r18
 70e:	83 9f       	mul	r24, r19
 710:	a0 0d       	add	r26, r0
 712:	61 1d       	adc	r22, r1
 714:	22 1f       	adc	r18, r18
 716:	74 9f       	mul	r23, r20
 718:	33 27       	eor	r19, r19
 71a:	a0 0d       	add	r26, r0
 71c:	61 1d       	adc	r22, r1
 71e:	23 1f       	adc	r18, r19
 720:	84 9f       	mul	r24, r20
 722:	60 0d       	add	r22, r0
 724:	21 1d       	adc	r18, r1
 726:	82 2f       	mov	r24, r18
 728:	76 2f       	mov	r23, r22
 72a:	6a 2f       	mov	r22, r26
 72c:	11 24       	eor	r1, r1
 72e:	9f 57       	subi	r25, 0x7F	; 127
 730:	50 40       	sbci	r21, 0x00	; 0
 732:	8a f0       	brmi	.+34     	; 0x756 <__mulsf3_pse+0x84>
 734:	e1 f0       	breq	.+56     	; 0x76e <__mulsf3_pse+0x9c>
 736:	88 23       	and	r24, r24
 738:	4a f0       	brmi	.+18     	; 0x74c <__mulsf3_pse+0x7a>
 73a:	ee 0f       	add	r30, r30
 73c:	ff 1f       	adc	r31, r31
 73e:	bb 1f       	adc	r27, r27
 740:	66 1f       	adc	r22, r22
 742:	77 1f       	adc	r23, r23
 744:	88 1f       	adc	r24, r24
 746:	91 50       	subi	r25, 0x01	; 1
 748:	50 40       	sbci	r21, 0x00	; 0
 74a:	a9 f7       	brne	.-22     	; 0x736 <__mulsf3_pse+0x64>
 74c:	9e 3f       	cpi	r25, 0xFE	; 254
 74e:	51 05       	cpc	r21, r1
 750:	70 f0       	brcs	.+28     	; 0x76e <__mulsf3_pse+0x9c>
 752:	5c cf       	rjmp	.-328    	; 0x60c <__fp_inf>
 754:	a6 cf       	rjmp	.-180    	; 0x6a2 <__fp_szero>
 756:	5f 3f       	cpi	r21, 0xFF	; 255
 758:	ec f3       	brlt	.-6      	; 0x754 <__mulsf3_pse+0x82>
 75a:	98 3e       	cpi	r25, 0xE8	; 232
 75c:	dc f3       	brlt	.-10     	; 0x754 <__mulsf3_pse+0x82>
 75e:	86 95       	lsr	r24
 760:	77 95       	ror	r23
 762:	67 95       	ror	r22
 764:	b7 95       	ror	r27
 766:	f7 95       	ror	r31
 768:	e7 95       	ror	r30
 76a:	9f 5f       	subi	r25, 0xFF	; 255
 76c:	c1 f7       	brne	.-16     	; 0x75e <__mulsf3_pse+0x8c>
 76e:	fe 2b       	or	r31, r30
 770:	88 0f       	add	r24, r24
 772:	91 1d       	adc	r25, r1
 774:	96 95       	lsr	r25
 776:	87 95       	ror	r24
 778:	97 f9       	bld	r25, 7
 77a:	08 95       	ret

0000077c <_exit>:
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
